/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * SeaWeatherOptionPanel.java
 *
 * Created on 05.11.2009, 15:00:36
 */

package javapskmail;

import java.util.Collection;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

/**
 *
 * @author sebastian_pohl
 */
public class SeaWeatherOptionPanel extends javax.swing.JDialog implements
    ListSelectionListener {

    Collection<String> internalDatabase;

    private String timeStamp = null;

    /** Creates new form SeaWeatherOptionPanel */
    public SeaWeatherOptionPanel(java.awt.Frame parent, boolean modal, Collection<String> database) {
        super(parent, modal);
        initComponents();

        lstTimeStamps.addListSelectionListener(this);

        internalDatabase = database;

        Object[] listItems = internalDatabase.toArray();

        lstTimeStamps.setListData(listItems);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jScrollPane1 = new javax.swing.JScrollPane();
        lstTimeStamps = new javax.swing.JList();
        btnOK = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Please select day and time (in UTC)");
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jScrollPane1.setViewportView(lstTimeStamps);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.8;
        getContentPane().add(jScrollPane1, gridBagConstraints);

        btnOK.setText("OK");
        btnOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOKActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.2;
        getContentPane().add(btnOK, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOKActionPerformed
        // TODO add your handling code here:
        setVisible(false);
    }//GEN-LAST:event_btnOKActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                SeaWeatherOptionPanel dialog = new SeaWeatherOptionPanel(new javax.swing.JFrame(), true, null);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnOK;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList lstTimeStamps;
    // End of variables declaration//GEN-END:variables

    public void valueChanged(ListSelectionEvent e) {
        timeStamp = (String) lstTimeStamps.getSelectedValue();
    }

    public String getTimeStamp() {
        if (timeStamp != null)
            return timeStamp;
        else
            return "";
    }

}
