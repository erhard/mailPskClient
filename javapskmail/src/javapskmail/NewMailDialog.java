/*
 * NewMailDialog.java
 *
 * Created on March 12, 2009, 4:19 PM
 */

package javapskmail;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStream;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;

/**
 *
 * @author  rein
 */
public class NewMailDialog extends javax.swing.JDialog {
    
    public String myattachment = "";
    
    /** Creates new form NewMailDialog */
    public NewMailDialog(java.awt.Frame parent, boolean modal) {
       super(parent, modal);
        initComponents();
       
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        pnlEmail = new javax.swing.JPanel();
        NewMailLabel = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        NewToField = new javax.swing.JTextField();
        NewSubjectField = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        NewTxtArea = new javax.swing.JTextArea();
        pnlButtons = new javax.swing.JPanel();
        add_attachment = new javax.swing.JButton();
        filelabel = new javax.swing.JLabel();
        bOK = new javax.swing.JButton();
        bCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(535, 430));
        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.PAGE_AXIS));

        pnlEmail.setMinimumSize(new java.awt.Dimension(390, 380));
        pnlEmail.setLayout(new java.awt.GridBagLayout());

        NewMailLabel.setFont(new java.awt.Font("Dialog", 1, 12));
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("javapskmail/NewMailDialog"); // NOI18N
        NewMailLabel.setText(bundle.getString("COMPOSE_NEW_MAIL")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 12, 0);
        pnlEmail.add(NewMailLabel, gridBagConstraints);

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 12));
        jLabel2.setText(bundle.getString("TO:")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        pnlEmail.add(jLabel2, gridBagConstraints);

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 12));
        jLabel3.setText(bundle.getString("SUBJECT:")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        pnlEmail.add(jLabel3, gridBagConstraints);

        NewToField.setMinimumSize(new java.awt.Dimension(200, 24));
        NewToField.setPreferredSize(new java.awt.Dimension(300, 24));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        pnlEmail.add(NewToField, gridBagConstraints);

        NewSubjectField.setMinimumSize(new java.awt.Dimension(200, 24));
        NewSubjectField.setPreferredSize(new java.awt.Dimension(300, 24));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        pnlEmail.add(NewSubjectField, gridBagConstraints);

        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        jScrollPane1.setMinimumSize(new java.awt.Dimension(200, 200));
        jScrollPane1.setPreferredSize(new java.awt.Dimension(400, 300));

        NewTxtArea.setColumns(20);
        NewTxtArea.setFont(new java.awt.Font("DejaVu Sans Mono", 0, 12));
        NewTxtArea.setLineWrap(true);
        NewTxtArea.setRows(5);
        NewTxtArea.setWrapStyleWord(true);
        NewTxtArea.setMinimumSize(new java.awt.Dimension(200, 200));
        NewTxtArea.setPreferredSize(new java.awt.Dimension(400, 300));
        jScrollPane1.setViewportView(NewTxtArea);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlEmail.add(jScrollPane1, gridBagConstraints);

        getContentPane().add(pnlEmail);

        pnlButtons.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        add_attachment.setText(bundle.getString("ADD_ATTACHMENT")); // NOI18N
        add_attachment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_attachmentActionPerformed(evt);
            }
        });
        pnlButtons.add(add_attachment);

        filelabel.setText(bundle.getString("NewMailDialog.filelabel.text")); // NOI18N
        pnlButtons.add(filelabel);

        bOK.setText(bundle.getString("OK")); // NOI18N
        bOK.setMinimumSize(new java.awt.Dimension(80, 30));
        bOK.setPreferredSize(new java.awt.Dimension(80, 30));
        bOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bOKActionPerformed(evt);
            }
        });
        pnlButtons.add(bOK);

        bCancel.setText(bundle.getString("CANCEL")); // NOI18N
        bCancel.setMinimumSize(new java.awt.Dimension(80, 30));
        bCancel.setPreferredSize(new java.awt.Dimension(80, 30));
        bCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCancelActionPerformed(evt);
            }
        });
        pnlButtons.add(bCancel);

        getContentPane().add(pnlButtons);

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
private void bOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bOKActionPerformed
// TODO add your handling code here:
            FileWriter out = null;

        try {
            String NewMailText = "\n~SEND\n";
            NewMailText += java.util.ResourceBundle.getBundle("javapskmail/NewMailDialog").getString("TO:_") + " " + NewToField.getText() + "\n";
            NewMailText += java.util.ResourceBundle.getBundle("javapskmail/NewMailDialog").getString("SUBJECT:_") + " " + NewSubjectField.getText() + "\n";
            NewMailText += NewTxtArea.getText();
            String s = "";
            String att = "";
            
            if (myattachment.length() > 0) {
                att = Base64.encodeFromFile(myattachment);
                File ff = new File(myattachment);
                String name = ff.getName();
            
                    if (att.length() > 0) {
                        NewMailText += java.util.ResourceBundle.getBundle("javapskmail/NewMailDialog").getString("YAF") + Character.toString('"') + name + Character.toString('"') + "\n";
                        NewMailText += att + "\n";
                    }
                     myattachment = "";
            }
//     System.out.println(att);
            
            NewMailText += ".\n.\n";
            Random r = new Random();
            String token = Long.toString(Math.abs(r.nextLong()), 12);
            token = java.util.ResourceBundle.getBundle("javapskmail/NewMailDialog").getString("TMP") + token;
            File outFile = new File(Main.HomePath + Main.Dirprefix + java.util.ResourceBundle.getBundle("javapskmail/NewMailDialog").getString("OUTBOX") + Main.Separator + token);
            out = new FileWriter(outFile);
            out.write(NewMailText);
            out.close();
            this.setVisible(false);
            
        } catch (IOException ex) {
            Logger.getLogger(NewMailDialog.class.getName()).log(Level.SEVERE, null, ex);
        }                                          
}//GEN-LAST:event_bOKActionPerformed

private void bCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCancelActionPerformed
// TODO add your handling code here:
    this.setVisible(false);
}//GEN-LAST:event_bCancelActionPerformed

private void add_attachmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_attachmentActionPerformed
    // TODO add your handling code here:
       File attach = new File(Main.HomePath);
       JFileChooser chooser = new JFileChooser(attach);
       int returnVal = chooser.showOpenDialog(chooser);
       if(returnVal == JFileChooser.APPROVE_OPTION) {
            myattachment = chooser.getSelectedFile().getPath();   
       }
       arq aa = new arq();
       aa.Message(java.util.ResourceBundle.getBundle("javapskmail/NewMailDialog").getString("INCLUDING_ATTACHMENT_") , 10);
//       System.out.println(myattachment);
}//GEN-LAST:event_add_attachmentActionPerformed
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                NewMailDialog dialog = new NewMailDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel NewMailLabel;
    private javax.swing.JTextField NewSubjectField;
    private javax.swing.JTextField NewToField;
    private javax.swing.JTextArea NewTxtArea;
    private javax.swing.JButton add_attachment;
    private javax.swing.JButton bCancel;
    private javax.swing.JButton bOK;
    private javax.swing.JLabel filelabel;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel pnlButtons;
    private javax.swing.JPanel pnlEmail;
    // End of variables declaration//GEN-END:variables
    
}
