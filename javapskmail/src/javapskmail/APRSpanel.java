/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * APRSpanel.java
 *
 * Created on 12.03.2009, 09:57:28
 */

package javapskmail;

import java.awt.Color;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Iterator;
import javax.swing.ImageIcon;
import javax.swing.JFrame;

/**
 *
 * @author sebastian_pohl
 */
public class APRSpanel extends javax.swing.JPanel {

    private WXSetupDialog wxDialog;
    private mainpskmaillogic parentlogic;

    /** Creates new form APRSpanel */
    public APRSpanel(mainpskmaillogic currentlogic) {
        parentlogic = currentlogic;
        wxDialog = new WXSetupDialog(parentlogic, parentlogic.getParentUI().getParentFrame(), true);
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        pnlOperator = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        lblCallsign = new javax.swing.JLabel();
        lblOperatorIcon = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        lblPicturePath = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        lblOperatorName = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        lblPictureName = new javax.swing.JLabel();
        pnlPosition = new javax.swing.JPanel();
        jPanel16 = new javax.swing.JPanel();
        jPanel17 = new javax.swing.JPanel();
        indGPS = new javax.swing.JPanel();
        lblGPS = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        txtCourse = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        txtSpeed = new javax.swing.JLabel();
        jPanel19 = new javax.swing.JPanel();
        jPanel20 = new javax.swing.JPanel();
        lblOperatingMode = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtLatitude = new javax.swing.JTextField();
        txtGeoLatitude = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtLongitude = new javax.swing.JTextField();
        txtGeoLongitude = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        pnlBeacon = new javax.swing.JPanel();
        pnlBeaconComment = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        txtBeaconcomment = new javax.swing.JTextField();
        cbBeacontime = new javax.swing.JComboBox();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        pnlBoardWX = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        txtWx = new javax.swing.JTextField();
        btnSetWX = new javax.swing.JButton();
        btnDelWX = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        pnlServer = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        btnServerList = new javax.swing.JButton();
        jPanel18 = new javax.swing.JPanel();
        leftPanel = new javax.swing.JPanel();
        cboServer = new javax.swing.JComboBox();
        jLabel13 = new javax.swing.JLabel();
        jPanel12 = new javax.swing.JPanel();
        selectPanel = new javax.swing.JPanel();
        cboLinkPeriod = new javax.swing.JComboBox();
        lblLinkLoop = new javax.swing.JLabel();
        jPanel13 = new javax.swing.JPanel();
        middlePanel = new javax.swing.JPanel();
        lblLinkIndicator = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jPanel14 = new javax.swing.JPanel();
        rightPanel = new javax.swing.JPanel();
        txtLinkTime = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jPanel15 = new javax.swing.JPanel();

        setMaximumSize(new java.awt.Dimension(512, 550));
        setMinimumSize(new java.awt.Dimension(512, 550));
        setPreferredSize(new java.awt.Dimension(512, 550));
        setLayout(new java.awt.GridBagLayout());

        pnlOperator.setBackground(new java.awt.Color(255, 255, 255));
        pnlOperator.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        pnlOperator.setMaximumSize(new java.awt.Dimension(500, 130));
        pnlOperator.setMinimumSize(new java.awt.Dimension(500, 130));
        pnlOperator.setPreferredSize(new java.awt.Dimension(500, 130));
        pnlOperator.setLayout(new java.awt.GridBagLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(212, 208, 200)));
        jPanel1.setMaximumSize(new java.awt.Dimension(200, 100));
        jPanel1.setMinimumSize(new java.awt.Dimension(200, 100));
        jPanel1.setPreferredSize(new java.awt.Dimension(200, 100));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        lblCallsign.setFont(new java.awt.Font("Tahoma", 1, 36));
        lblCallsign.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("javapskmail/APRSpanel"); // NOI18N
        lblCallsign.setText(bundle.getString("APRSpanel.lblCallsign.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel1.add(lblCallsign, gridBagConstraints);

        lblOperatorIcon.setFont(new java.awt.Font("Tahoma", 1, 14));
        lblOperatorIcon.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblOperatorIcon.setText(bundle.getString("APRSpanel.lblOperatorIcon.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel1.add(lblOperatorIcon, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.RELATIVE;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 0.5;
        pnlOperator.add(jPanel1, gridBagConstraints);

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(212, 208, 200)));
        jPanel4.setMaximumSize(new java.awt.Dimension(200, 100));
        jPanel4.setMinimumSize(new java.awt.Dimension(200, 100));
        jPanel4.setPreferredSize(new java.awt.Dimension(200, 100));
        jPanel4.setLayout(new java.awt.GridBagLayout());

        lblPicturePath.setFont(new java.awt.Font("Tahoma", 1, 18));
        lblPicturePath.setText(bundle.getString("APRSpanel.lblPicturePath.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.gridheight = java.awt.GridBagConstraints.REMAINDER;
        jPanel4.add(lblPicturePath, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 0.5;
        pnlOperator.add(jPanel4, gridBagConstraints);

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(212, 208, 200)));
        jPanel5.setMaximumSize(new java.awt.Dimension(200, 30));
        jPanel5.setMinimumSize(new java.awt.Dimension(200, 30));
        jPanel5.setPreferredSize(new java.awt.Dimension(200, 30));
        jPanel5.setLayout(new java.awt.GridBagLayout());

        lblOperatorName.setFont(new java.awt.Font("Tahoma", 1, 18));
        lblOperatorName.setText(bundle.getString("APRSpanel.lblOperatorName.text")); // NOI18N
        jPanel5.add(lblOperatorName, new java.awt.GridBagConstraints());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.RELATIVE;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 0.2;
        pnlOperator.add(jPanel5, gridBagConstraints);

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));
        jPanel6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(212, 208, 200)));
        jPanel6.setMaximumSize(new java.awt.Dimension(200, 30));
        jPanel6.setMinimumSize(new java.awt.Dimension(200, 30));
        jPanel6.setPreferredSize(new java.awt.Dimension(200, 30));
        jPanel6.setLayout(new java.awt.GridBagLayout());

        lblPictureName.setFont(new java.awt.Font("Tahoma", 1, 18));
        lblPictureName.setText(bundle.getString("APRSpanel.lblPictureName.text")); // NOI18N
        jPanel6.add(lblPictureName, new java.awt.GridBagConstraints());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 0.2;
        pnlOperator.add(jPanel6, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        add(pnlOperator, gridBagConstraints);

        pnlPosition.setBackground(new java.awt.Color(255, 255, 255));
        pnlPosition.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        pnlPosition.setMaximumSize(new java.awt.Dimension(500, 50));
        pnlPosition.setMinimumSize(new java.awt.Dimension(500, 50));
        pnlPosition.setPreferredSize(new java.awt.Dimension(500, 50));
        pnlPosition.setLayout(new java.awt.GridBagLayout());

        jPanel16.setBackground(new java.awt.Color(255, 255, 255));
        jPanel16.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(212, 208, 200)));
        jPanel16.setMaximumSize(new java.awt.Dimension(100, 25));
        jPanel16.setMinimumSize(new java.awt.Dimension(100, 25));
        jPanel16.setPreferredSize(new java.awt.Dimension(100, 25));
        jPanel16.setLayout(new java.awt.GridBagLayout());

        jPanel17.setBackground(new java.awt.Color(255, 255, 255));
        jPanel17.setLayout(new java.awt.GridBagLayout());

        indGPS.setBackground(new java.awt.Color(0, 255, 0));
        indGPS.setMinimumSize(new java.awt.Dimension(10, 20));
        indGPS.setPreferredSize(new java.awt.Dimension(54, 15));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.5;
        jPanel17.add(indGPS, gridBagConstraints);

        lblGPS.setBackground(new java.awt.Color(255, 255, 255));
        lblGPS.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblGPS.setText(bundle.getString("GPS_INFO")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.5;
        jPanel17.add(lblGPS, gridBagConstraints);

        jPanel16.add(jPanel17, new java.awt.GridBagConstraints());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        pnlPosition.add(jPanel16, gridBagConstraints);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(212, 208, 200)));
        jPanel2.setMaximumSize(new java.awt.Dimension(150, 25));
        jPanel2.setMinimumSize(new java.awt.Dimension(150, 25));
        jPanel2.setPreferredSize(new java.awt.Dimension(150, 25));
        jPanel2.setLayout(new java.awt.GridBagLayout());

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18));
        jLabel3.setText(bundle.getString("COURSE")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.RELATIVE;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel2.add(jLabel3, gridBagConstraints);

        txtCourse.setFont(new java.awt.Font("Tahoma", 1, 14));
        txtCourse.setText(bundle.getString("APRSpanel.txtCourse.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel2.add(txtCourse, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 0.2;
        pnlPosition.add(jPanel2, gridBagConstraints);

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(212, 208, 200)));
        jPanel3.setMaximumSize(new java.awt.Dimension(150, 25));
        jPanel3.setMinimumSize(new java.awt.Dimension(150, 25));
        jPanel3.setPreferredSize(new java.awt.Dimension(150, 25));
        jPanel3.setLayout(new java.awt.GridBagLayout());

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18));
        jLabel4.setText(bundle.getString("SPEED_(KTS.)")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.RELATIVE;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel3.add(jLabel4, gridBagConstraints);

        txtSpeed.setFont(new java.awt.Font("Tahoma", 1, 14));
        txtSpeed.setText(bundle.getString("APRSpanel.txtSpeed.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel3.add(txtSpeed, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 0.2;
        pnlPosition.add(jPanel3, gridBagConstraints);

        jPanel19.setBackground(new java.awt.Color(255, 255, 255));
        jPanel19.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(212, 208, 200)));
        jPanel19.setMaximumSize(new java.awt.Dimension(100, 25));
        jPanel19.setMinimumSize(new java.awt.Dimension(100, 25));
        jPanel19.setPreferredSize(new java.awt.Dimension(100, 25));
        jPanel19.setLayout(new java.awt.GridBagLayout());

        jPanel20.setBackground(new java.awt.Color(255, 255, 255));
        jPanel20.setLayout(new java.awt.GridBagLayout());

        lblOperatingMode.setText(bundle.getString("APRSpanel.lblOperatingMode.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel20.add(lblOperatingMode, gridBagConstraints);

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel8.setText(bundle.getString("APRSpanel.jLabel8.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel20.add(jLabel8, gridBagConstraints);

        jPanel19.add(jPanel20, new java.awt.GridBagConstraints());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        pnlPosition.add(jPanel19, gridBagConstraints);

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));
        jPanel7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(212, 208, 200)));
        jPanel7.setMaximumSize(new java.awt.Dimension(250, 25));
        jPanel7.setMinimumSize(new java.awt.Dimension(250, 25));
        jPanel7.setPreferredSize(new java.awt.Dimension(250, 25));
        jPanel7.setLayout(new java.awt.GridBagLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel1.setText(bundle.getString("APRSpanel.jLabel1.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jPanel7.add(jLabel1, gridBagConstraints);

        txtLatitude.setBackground(new java.awt.Color(203, 207, 228));
        txtLatitude.setMinimumSize(new java.awt.Dimension(60, 20));
        txtLatitude.setPreferredSize(new java.awt.Dimension(60, 20));
        txtLatitude.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLatitudeActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        jPanel7.add(txtLatitude, gridBagConstraints);

        txtGeoLatitude.setBackground(new java.awt.Color(203, 207, 228));
        txtGeoLatitude.setMinimumSize(new java.awt.Dimension(60, 20));
        txtGeoLatitude.setPreferredSize(new java.awt.Dimension(60, 20));
        txtGeoLatitude.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtGeoLatitudeActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        jPanel7.add(txtGeoLatitude, gridBagConstraints);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel5.setText(bundle.getString("APRSpanel.jLabel5.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel7.add(jLabel5, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 0.2;
        pnlPosition.add(jPanel7, gridBagConstraints);

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));
        jPanel8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(212, 208, 200)));
        jPanel8.setMaximumSize(new java.awt.Dimension(250, 25));
        jPanel8.setMinimumSize(new java.awt.Dimension(250, 25));
        jPanel8.setPreferredSize(new java.awt.Dimension(250, 25));
        jPanel8.setLayout(new java.awt.GridBagLayout());

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel2.setText(bundle.getString("APRSpanel.jLabel2.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jPanel8.add(jLabel2, gridBagConstraints);

        txtLongitude.setBackground(new java.awt.Color(203, 207, 228));
        txtLongitude.setMinimumSize(new java.awt.Dimension(60, 20));
        txtLongitude.setPreferredSize(new java.awt.Dimension(60, 20));
        txtLongitude.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLongitudeActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        jPanel8.add(txtLongitude, gridBagConstraints);

        txtGeoLongitude.setBackground(new java.awt.Color(203, 207, 228));
        txtGeoLongitude.setMinimumSize(new java.awt.Dimension(60, 20));
        txtGeoLongitude.setPreferredSize(new java.awt.Dimension(60, 20));
        txtGeoLongitude.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtGeoLongitudeActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        jPanel8.add(txtGeoLongitude, gridBagConstraints);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel6.setText(bundle.getString("APRSpanel.jLabel6.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel8.add(jLabel6, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 0.2;
        pnlPosition.add(jPanel8, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        add(pnlPosition, gridBagConstraints);

        pnlBeacon.setBackground(new java.awt.Color(255, 255, 255));
        pnlBeacon.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        pnlBeacon.setMaximumSize(new java.awt.Dimension(500, 120));
        pnlBeacon.setMinimumSize(new java.awt.Dimension(500, 120));
        pnlBeacon.setPreferredSize(new java.awt.Dimension(500, 120));
        pnlBeacon.setLayout(new java.awt.GridBagLayout());

        pnlBeaconComment.setBackground(new java.awt.Color(255, 255, 255));
        pnlBeaconComment.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(212, 208, 200)));
        pnlBeaconComment.setMaximumSize(new java.awt.Dimension(500, 30));
        pnlBeaconComment.setMinimumSize(new java.awt.Dimension(500, 30));
        pnlBeaconComment.setPreferredSize(new java.awt.Dimension(500, 30));
        pnlBeaconComment.setLayout(new java.awt.GridBagLayout());

        jPanel9.setBackground(new java.awt.Color(203, 207, 228));
        jPanel9.setMaximumSize(new java.awt.Dimension(400, 30));
        jPanel9.setMinimumSize(new java.awt.Dimension(400, 30));
        jPanel9.setPreferredSize(new java.awt.Dimension(400, 30));
        jPanel9.setLayout(new java.awt.GridBagLayout());

        txtBeaconcomment.setDocument(new JTextFieldLimit(67));
        txtBeaconcomment.setText(bundle.getString("APRSpanel.txtBeaconcomment.text")); // NOI18N
        txtBeaconcomment.setToolTipText(bundle.getString("KURZTEXT,_MAXIMAL_67_ZEICHEN_ZUR_POSITION._ANZEIGE_VON_INTERMAR_YACHT-POSITIONSKARTE_WWW.INTERMAR-EV.DE.")); // NOI18N
        txtBeaconcomment.setMaximumSize(new java.awt.Dimension(370, 20));
        txtBeaconcomment.setMinimumSize(new java.awt.Dimension(370, 20));
        txtBeaconcomment.setPreferredSize(new java.awt.Dimension(370, 20));
        txtBeaconcomment.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBeaconcommentKeyReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        jPanel9.add(txtBeaconcomment, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.RELATIVE;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.7;
        pnlBeaconComment.add(jPanel9, gridBagConstraints);

        cbBeacontime.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Manual", "Auto 10", "Auto 30", "Auto 60" }));
        cbBeacontime.setToolTipText(bundle.getString("BEACONSENCEINTERVALL_EINSTELLBAR.")); // NOI18N
        cbBeacontime.setMaximumSize(new java.awt.Dimension(100, 22));
        cbBeacontime.setMinimumSize(new java.awt.Dimension(100, 22));
        cbBeacontime.setPreferredSize(new java.awt.Dimension(100, 22));
        cbBeacontime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbBeacontimeActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.3;
        pnlBeaconComment.add(cbBeacontime, gridBagConstraints);

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel10.setText(bundle.getString("OUTGOING-BEACONCOMMENT")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.RELATIVE;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.7;
        pnlBeaconComment.add(jLabel10, gridBagConstraints);

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel11.setText(bundle.getString("BEACON-TIME")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.3;
        pnlBeaconComment.add(jLabel11, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.2;
        pnlBeacon.add(pnlBeaconComment, gridBagConstraints);

        pnlBoardWX.setBackground(new java.awt.Color(255, 255, 255));
        pnlBoardWX.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(212, 208, 200)));
        pnlBoardWX.setMaximumSize(new java.awt.Dimension(500, 30));
        pnlBoardWX.setMinimumSize(new java.awt.Dimension(500, 30));
        pnlBoardWX.setPreferredSize(new java.awt.Dimension(500, 30));
        pnlBoardWX.setLayout(new java.awt.GridBagLayout());

        jPanel11.setBackground(new java.awt.Color(204, 204, 204));
        jPanel11.setMaximumSize(new java.awt.Dimension(320, 30));
        jPanel11.setMinimumSize(new java.awt.Dimension(320, 30));
        jPanel11.setPreferredSize(new java.awt.Dimension(320, 30));
        jPanel11.setLayout(new java.awt.GridBagLayout());

        txtWx.setBackground(new java.awt.Color(203, 207, 228));
        txtWx.setEditable(false);
        txtWx.setText(bundle.getString("APRSpanel.txtWx.text")); // NOI18N
        txtWx.setMaximumSize(new java.awt.Dimension(1000, 1000));
        txtWx.setMinimumSize(new java.awt.Dimension(270, 20));
        txtWx.setPreferredSize(new java.awt.Dimension(270, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        jPanel11.add(txtWx, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        pnlBoardWX.add(jPanel11, gridBagConstraints);

        btnSetWX.setBackground(new java.awt.Color(102, 204, 255));
        btnSetWX.setFont(new java.awt.Font("Tahoma", 1, 11));
        btnSetWX.setText(bundle.getString("SET_WX")); // NOI18N
        btnSetWX.setToolTipText(bundle.getString("BORDWETTER_INFORMATIONEN,_WIRD_GESENDET_MIT_POSITIONSREPORT")); // NOI18N
        btnSetWX.setMargin(new java.awt.Insets(2, 10, 2, 10));
        btnSetWX.setMaximumSize(new java.awt.Dimension(40, 23));
        btnSetWX.setMinimumSize(new java.awt.Dimension(40, 23));
        btnSetWX.setPreferredSize(new java.awt.Dimension(40, 23));
        btnSetWX.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSetWXActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        pnlBoardWX.add(btnSetWX, gridBagConstraints);

        btnDelWX.setBackground(new java.awt.Color(43, 2, 2));
        btnDelWX.setFont(new java.awt.Font("Tahoma", 1, 11));
        btnDelWX.setForeground(new java.awt.Color(255, 255, 255));
        btnDelWX.setText(bundle.getString("DEL_WX")); // NOI18N
        btnDelWX.setMargin(new java.awt.Insets(2, 10, 2, 10));
        btnDelWX.setMaximumSize(new java.awt.Dimension(40, 23));
        btnDelWX.setMinimumSize(new java.awt.Dimension(40, 23));
        btnDelWX.setPreferredSize(new java.awt.Dimension(40, 23));
        btnDelWX.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelWXActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        pnlBoardWX.add(btnDelWX, gridBagConstraints);

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel12.setText(bundle.getString("BOARD-WEATHER,RIG-STATION")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.RELATIVE;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        pnlBoardWX.add(jLabel12, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.2;
        pnlBeacon.add(pnlBoardWX, gridBagConstraints);

        pnlServer.setBackground(new java.awt.Color(255, 255, 255));
        pnlServer.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(212, 208, 200)));
        pnlServer.setMaximumSize(new java.awt.Dimension(500, 30));
        pnlServer.setMinimumSize(new java.awt.Dimension(500, 30));
        pnlServer.setPreferredSize(new java.awt.Dimension(500, 30));
        pnlServer.setLayout(new java.awt.GridBagLayout());

        jPanel10.setBackground(new java.awt.Color(255, 255, 255));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        pnlServer.add(jPanel10, gridBagConstraints);

        btnServerList.setBackground(new java.awt.Color(0, 0, 204));
        btnServerList.setFont(new java.awt.Font("Tahoma", 1, 12));
        btnServerList.setForeground(new java.awt.Color(255, 255, 255));
        btnServerList.setText(bundle.getString("LIST")); // NOI18N
        btnServerList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnServerListActionPerformed(evt);
            }
        });
        pnlServer.add(btnServerList, new java.awt.GridBagConstraints());

        jPanel18.setBackground(new java.awt.Color(255, 255, 255));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        pnlServer.add(jPanel18, gridBagConstraints);

        leftPanel.setBackground(new java.awt.Color(255, 255, 255));
        leftPanel.setLayout(new java.awt.GridBagLayout());

        cboServer.setEditable(true);
        cboServer.setToolTipText(bundle.getString("LETZTER_LINK_SERVER,_SENDER_APRS-EMAIL_UND_MESSAGEN.")); // NOI18N
        cboServer.setMaximumSize(new java.awt.Dimension(150, 20));
        cboServer.setMinimumSize(new java.awt.Dimension(150, 20));
        cboServer.setPreferredSize(new java.awt.Dimension(150, 20));
        cboServer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboServerActionPerformed(evt);
            }
        });
        cboServer.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                cboServerFocusLost(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.weightx = 1.0;
        leftPanel.add(cboServer, gridBagConstraints);

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel13.setText(bundle.getString("SERVER_ACTUAL")); // NOI18N
        jLabel13.setToolTipText(bundle.getString("DIES_IST_DER_SERVER,_MIT_DEM_MAN_SICH_VERLINKEN_MUSS,_DAMIT_MAN_SEINE_APRS_EMAIL_UND_MESSAGES_AUTOMATISCH_ERHÄLT.")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.RELATIVE;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.weightx = 1.0;
        leftPanel.add(jLabel13, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.2;
        pnlServer.add(leftPanel, gridBagConstraints);

        jPanel12.setBackground(new java.awt.Color(255, 255, 255));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        pnlServer.add(jPanel12, gridBagConstraints);

        selectPanel.setBackground(new java.awt.Color(255, 255, 255));
        selectPanel.setLayout(new java.awt.GridBagLayout());

        cboLinkPeriod.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Manual", "Auto 30", "Auto 60" }));
        cboLinkPeriod.setSelectedIndex(1);
        cboLinkPeriod.setToolTipText(bundle.getString("AUTOMATIK_LINK_NACH_ZEIT_(MINUTEN)_ODER_MANUELL.")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        selectPanel.add(cboLinkPeriod, gridBagConstraints);

        lblLinkLoop.setFont(new java.awt.Font("Tahoma", 1, 11));
        lblLinkLoop.setText(bundle.getString("LINK_LOOP")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        selectPanel.add(lblLinkLoop, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.12;
        pnlServer.add(selectPanel, gridBagConstraints);

        jPanel13.setBackground(new java.awt.Color(255, 255, 255));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        pnlServer.add(jPanel13, gridBagConstraints);

        middlePanel.setBackground(new java.awt.Color(255, 255, 255));
        middlePanel.setLayout(new java.awt.GridBagLayout());

        lblLinkIndicator.setBackground(new java.awt.Color(255, 0, 0));
        lblLinkIndicator.setToolTipText(bundle.getString("ROT:_NICHT_GELINKT,_GRÜN:_GELINKT")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.gridheight = java.awt.GridBagConstraints.RELATIVE;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.5;
        middlePanel.add(lblLinkIndicator, gridBagConstraints);

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel15.setText(bundle.getString("LINK_INFO")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.RELATIVE;
        gridBagConstraints.gridheight = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.5;
        middlePanel.add(jLabel15, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.12;
        pnlServer.add(middlePanel, gridBagConstraints);

        jPanel14.setBackground(new java.awt.Color(255, 255, 255));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        pnlServer.add(jPanel14, gridBagConstraints);

        rightPanel.setBackground(new java.awt.Color(255, 255, 255));
        rightPanel.setLayout(new java.awt.GridBagLayout());

        txtLinkTime.setBackground(new java.awt.Color(203, 207, 228));
        txtLinkTime.setEditable(false);
        txtLinkTime.setToolTipText(bundle.getString("LETZTER_LINK_CONNECT.")); // NOI18N
        txtLinkTime.setMinimumSize(new java.awt.Dimension(100, 20));
        txtLinkTime.setPreferredSize(new java.awt.Dimension(100, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        rightPanel.add(txtLinkTime, gridBagConstraints);

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel16.setText(bundle.getString("LINK_TIME")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        rightPanel.add(jLabel16, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.12;
        pnlServer.add(rightPanel, gridBagConstraints);

        jPanel15.setBackground(new java.awt.Color(255, 255, 255));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        pnlServer.add(jPanel15, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.RELATIVE;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.2;
        pnlBeacon.add(pnlServer, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        add(pnlBeacon, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void txtBeaconcommentKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBeaconcommentKeyReleased
        // TODO add your handling code here:
        parentlogic.txtStatusKeyReleased(evt);
    }//GEN-LAST:event_txtBeaconcommentKeyReleased

    private void btnSetWXActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSetWXActionPerformed
        // TODO add your handling code here:
        //wxDialog = new WXSetupDialog(parentlogic, parentlogic.getParentUI().getParentFrame(), true);
        wxDialog.setLocationRelativeTo(null);
        wxDialog.setVisible(true);
}//GEN-LAST:event_btnSetWXActionPerformed

    private void cbBeacontimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbBeacontimeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbBeacontimeActionPerformed

    private void btnDelWXActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelWXActionPerformed
        // TODO add your handling code here:
        parentlogic.getParentUI().setBoardWX("");
        parentlogic.myconfig.setPreference("WX", "");
        parentlogic.myarq.setBoardWX("");
}//GEN-LAST:event_btnDelWXActionPerformed

    public static String transformGeoToDezi(String str) {
        try {
            int index = 0;

        String temp = "";
        String geoLong = str;
        String s = "";
        ArrayList<String> elements = new ArrayList<String>();
        while (index < geoLong.length()) {
            s = geoLong.substring(index,index+1);
            if (s.equals(".")) {
                elements.add(temp);
                temp = "";
            } else {
                temp = temp.concat(s);
            }
            index++;
        }
        elements.add(temp);

        Double temp2;
        temp2 = ((new Double(elements.get(2)) / 60) + new Double(elements.get(1))) / 60
                + new Double(elements.get(0));

        temp2 = temp2 * 10000;
        temp2 = new Double(temp2.intValue());
        temp2 = temp2 / 10000;

        return temp2.toString();
        } catch (Exception e) {
            return "";
        }
    }

    private void txtGeoLatitudeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtGeoLatitudeActionPerformed
        // TODO add your handling code here:
        setTxtLatitude(transformGeoToDezi(txtGeoLatitude.getText()));
}//GEN-LAST:event_txtGeoLatitudeActionPerformed

    private void txtGeoLongitudeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtGeoLongitudeActionPerformed
        // TODO add your handling code here:
        setTxtLongitude(transformGeoToDezi(txtGeoLongitude.getText()));
    }//GEN-LAST:event_txtGeoLongitudeActionPerformed

    public static String getBeforeComma(String str) {
        try {
            Long Int1 = new Long((new Double(str)).longValue());

        return Int1.toString();
        } catch(Exception e) {
            return "";
        }
    }

    public static String getAfterComma(String str) {
        try {
            Double temp = new Double(str);
            return (new Double(temp - new Double(getBeforeComma(str)))).toString();
        } catch (Exception e) {
            return "";
        }
    }

    public static String transformDeziToGeo(String str) {
        try {
            String geoLat = "";

        String lat = str;
        //System.out.println(getBeforeComma(lat));
        geoLat = geoLat.concat(getBeforeComma(lat)).concat(".");
        lat = getAfterComma(lat);
        lat = (new Double((new Double(lat)) * 60)).toString();
        //System.out.println(getBeforeComma(lat));
        geoLat = geoLat.concat(getBeforeComma(lat)).concat(".");
        lat = getAfterComma(lat);
        lat = (new Double((new Double(lat)) * 60)).toString();
        //System.out.println(getBeforeComma(lat));
        geoLat = geoLat.concat(getBeforeComma(lat));

        return geoLat;    
        } catch (Exception e) {
            return "";
        }
    }

    private void txtLatitudeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLatitudeActionPerformed
        // TODO add your handling code here:
        // txtGeoLatitude.setText(transformDeziToGeo(getTxtLatitude()).toString());
        try {
            setTxtLatitude(getTxtLatitude());
        } catch(Exception e) {
            setTxtLatitude("");
        }
    }//GEN-LAST:event_txtLatitudeActionPerformed

    private void txtLongitudeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLongitudeActionPerformed
        // TODO add your handling code here:
        //txtGeoLongitude.setText(transformDeziToGeo(getTxtLongitude()).toString());
        try {
            setTxtLongitude(getTxtLongitude());
        } catch (Exception e) {
            setTxtLongitude("");
        }

    }//GEN-LAST:event_txtLongitudeActionPerformed

    private void cboServerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboServerActionPerformed
        // TODO add your handling code here:
        parentlogic.cboServerActionPerformed(evt);
    }//GEN-LAST:event_cboServerActionPerformed

    private void cboServerFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cboServerFocusLost
        // TODO add your handling code here:
        parentlogic.cboServerFocusLost(evt);
    }//GEN-LAST:event_cboServerFocusLost

    private void btnServerListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnServerListActionPerformed
        // TODO add your handling code here:

        if (Main.pskServerDatabase != null) {
            ServerTableDialog tempServerFrame = new ServerTableDialog(parentlogic.getParentUI().getParentFrame(), true, Main.pskServerDatabase);

            tempServerFrame.setLocationRelativeTo(null);

            tempServerFrame.setDefaultCloseOperation(JFrame.HIDE_ON_CLOSE);

            tempServerFrame.setVisible(true);

            //try {
                // Main.pskServerDatabase = new ServerDatabase(new File("serverlist"));

                // System.out.println(Main.pskServerDatabase.getServerList());

                Iterator<String> iter = Main.pskServerDatabase.getServerList().iterator();
                String scall = (String) cboServer.getSelectedItem();
                Main.Servers.clear();
                // Main.Servers.add(scall);
                while (iter.hasNext()) {
                    //parentlogic.getParentUI().addCboServer(iter.next());
                    String temp = iter.next();

                    //System.out.println("item:" + temp);

                    Iterator<String> iter2 = Main.Servers.iterator();
                    boolean contained = false;
                    while (iter2.hasNext()) {
                        if (temp.equals(iter2.next())) {
                            contained = true;
                        }
                    }
                    if (!contained) {
                        Main.Servers.add(temp);
                    }
                }

                //System.out.println(Main.Servers);
                //System.out.println(cboServer.getItemCount());

                while (cboServer.getItemCount() >= 2) {
                    cboServer.removeItemAt(1);
                }
                // cboServer.removeAllItems();
                // cboServer.addItem(scall);
                iter = Main.Servers.iterator();
                while (iter.hasNext()) {
                    String temp = iter.next();
                    boolean contained = false;

                    for (int i = 0; i < cboServer.getModel().getSize(); i++) {
                        if (temp.equals(cboServer.getModel().getElementAt(i))) {
                            contained = true;
                        }
                    }

                    if (!contained) {
                        cboServer.addItem(temp);
                    }
                }

                for (int i = 0; i < cboServer.getModel().getSize(); i++) {
                    //System.out.println(cboServer.getModel().getElementAt(i));
                }
        }
    }//GEN-LAST:event_btnServerListActionPerformed



    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new APRSpanel(null).setVisible(true);
            }
        });
    }

    public void setCallsign(String str) {
        lblCallsign.setText(str);
    }

    public void setAPRSIcon(String str) {
        lblOperatorIcon.setText(str);
    }

    public void setAPRSIcon(ImageIcon i) {
        lblOperatorIcon.setIcon(i);
    }

    public void setOperatorName(String str) {
        lblOperatorName.setText(str);
    };

    public String getOperatorName() {
        return lblOperatorName.getText();
    };

    public void setPicturePath(String str) {
        lblPicturePath.setText("");
        ImageIcon temp = new ImageIcon(str);
        //lblPicturePath.setIcon(temp);
        lblPicturePath.setIcon(new ImageIcon(temp.getImage().getScaledInstance(-1,100,40)));
    };

    public String getPicturePath() {
        return lblPicturePath.getText();
    };

    public void setPictureName(String str) {
        lblPictureName.setText(str);
    };

    public String getPictureName() {
        return lblPictureName.getText();
    };

    public void setBoardWX(String str) {
        this.txtWx.setText(str);
    }

    public String getBoardWX() {
        return this.txtWx.getText();
    }

    public WXSetupDialog getWXDialog() {
        return wxDialog;
    }

    public String getTxtLatitude() {
        return this.txtLatitude.getText();
    }

    public void setTxtLatitude(String str) {
        this.txtLatitude.setText(str);
        try {
            this.txtGeoLatitude.setText(transformDeziToGeo(str));
        } catch(Exception e) {
            // do nothing
        }
        parentlogic.getConfig().setPreference("LATITUDE", getTxtLatitude());
    }

    public String getTxtLongitude() {
        return this.txtLongitude.getText();
    }

    public void setTxtLongitude(String str) {
        this.txtLongitude.setText(str);
        try {
            this.txtGeoLongitude.setText(transformDeziToGeo(str));
        } catch(Exception e) {
            // do nothing
        }
        parentlogic.getConfig().setPreference("LONGITUDE", getTxtLongitude());
    }
    
    public String getTxtBeaconComment() {
        return this.txtBeaconcomment.getText();
    }

    public void setTxtBeaconComment(String str) {
        this.txtBeaconcomment.setText(str);
    }

    public String getCbBeaconTime() {
        return this.cbBeacontime.getSelectedItem().toString();
    }

    public void setCbBeaconTime(String str) {
        this.cbBeacontime.setSelectedItem(str);
    }

    public String getTxtSpeed() {
        return txtSpeed.getText();
    }

    public void setTxtSpeed(String str) {
        txtSpeed.setText(str);
    }

    public void setCourse(String str) {
        this.txtCourse.setText(str);
    }

    public void setSpeed(String str) {
        this.txtSpeed.setText(str);
    }

    public String getCourse() {
        return this.txtCourse.getText();
    }

    public String getSpeed() {
        return this.txtSpeed.getText();
    }

    public void setPosTime(String str) {
        this.txtLinkTime.setText(str);
    }

    public javax.swing.JComboBox getServerCbox() {
        return this.cboServer;
    }

    public void setOperatorIcon(String string) {
        lblOperatorIcon.setText(string);
    }

    public void setLinkPeriod(int l) {
        cboLinkPeriod.setSelectedIndex(l);
    };

    public int getLinkPeriod() {
        return cboLinkPeriod.getSelectedIndex();
    };

    public void setLinkIndicator(boolean b) {
        if (b)
            lblLinkIndicator.setBackground(new Color(0,255,0));
        else
            lblLinkIndicator.setBackground(new Color(255,0,0));
    };

    public void setGPSIndicator(boolean b) {
        if (b) {
            //System.out.println("GPS ok");
            indGPS.setBackground(new Color(0,255,0));
        } else {
            //System.out.println("GPS not there");
            indGPS.setBackground(new Color(255,0,0));
        }
    }

    public void setOperatingMode(String str) {
        lblOperatingMode.setText(str);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelWX;
    private javax.swing.JButton btnServerList;
    private javax.swing.JButton btnSetWX;
    private javax.swing.JComboBox cbBeacontime;
    private javax.swing.JComboBox cboLinkPeriod;
    private javax.swing.JComboBox cboServer;
    private javax.swing.JPanel indGPS;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JLabel lblCallsign;
    private javax.swing.JLabel lblGPS;
    private javax.swing.JPanel lblLinkIndicator;
    private javax.swing.JLabel lblLinkLoop;
    private javax.swing.JLabel lblOperatingMode;
    private javax.swing.JLabel lblOperatorIcon;
    private javax.swing.JLabel lblOperatorName;
    private javax.swing.JLabel lblPictureName;
    private javax.swing.JLabel lblPicturePath;
    private javax.swing.JPanel leftPanel;
    private javax.swing.JPanel middlePanel;
    private javax.swing.JPanel pnlBeacon;
    private javax.swing.JPanel pnlBeaconComment;
    private javax.swing.JPanel pnlBoardWX;
    private javax.swing.JPanel pnlOperator;
    private javax.swing.JPanel pnlPosition;
    private javax.swing.JPanel pnlServer;
    private javax.swing.JPanel rightPanel;
    private javax.swing.JPanel selectPanel;
    private javax.swing.JTextField txtBeaconcomment;
    private javax.swing.JLabel txtCourse;
    private javax.swing.JTextField txtGeoLatitude;
    private javax.swing.JTextField txtGeoLongitude;
    private javax.swing.JTextField txtLatitude;
    private javax.swing.JTextField txtLinkTime;
    private javax.swing.JTextField txtLongitude;
    private javax.swing.JLabel txtSpeed;
    private javax.swing.JTextField txtWx;
    // End of variables declaration//GEN-END:variables

}
